[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = blue
	untracked = cyan

[alias]
	amend = commit -a --amend
	br = branch
	# show all branches, even across remotes
	branches = branch -a --color -v
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"<Paste>
	# remove all local branches included in the current branch
	cleanup = !sh -c 'git branch --merged | grep -E "^[^*]" --exclude "^\\s*master" | xargs -n1 git branch -d'
	co = checkout
	cob = checkout -b
	cm = !git add -A && git commit -m
	ctags = !.git/hooks/ctags
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Diff
	df = diff
	# Get short SHA-1 for object
	hash = rev-parse --short HEAD
	lc = log ORIG_HEAD.. --stat --no-merges
	# just for fun
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	ls = ls-files
	mybranches = "!f() { if test $# = 0 ; then set -- refs/remotes ; fi ; git for-each-ref --format='%(authordate:relative)\t%(refname:short)\t%(authoremail)' --sort=authordate \"$@\" | sed -ne \"s/\t<$(git config user.email)>//p\" | column -s '\t' -t ; } ; f"
	# Find FIXME, TODO, etc, optimized by @x3ro https://gist.github.com/3908985
	n = !"f() { git ls-files $1 | xargs notes | awk -F: '{ print $1,$2; print $3,$4; print $5}' | grcat conf.notes | less -r;  }; f"
	pullm = !"git pull origin master"
	pushm = !"git push origin master"
	rb = rebase
	rbc = rebase --continue
	# Interactive rebase with the selected number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"tags = tag -l
	# track a remote branch
	track = checkout -t
	save = !git add -A && git commit -m 'SAVEPOINT'
	st = status
	# update all submodules
	subs = submodule foreach git pull origin master
	# clean up fully merged branches
	sweep = !git-sweep
	undo = reset HEAD~1 --mixed
	# list only untracked files
	untracked = ls-files --others --exclude-standard
	# remove a file from the index
	unstage = reset HEAD --
	up = "!git remote update -p; git merge --ff-only @{u}"
	wdiff = diff --color-words
	wip = "!$EDITOR $(git ls-files -m)"
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	mypulls = browse -- pulls/stephenway
	personal = "!git config user.email \"way.stephen@gmail.com\"; rm .git/hooks/*"
	# Emoji commits
	initial = !bash -c 'git commit -m \":sunrise: Initial commit\"'
	# Git-flow
	finit = flow init -d
	feature = flow feature
	release = flow release
	hotfix = flow hotfix
	support = flow support

[core]
	excludesfile = ~/.gitignore_global

[init]
	templatedir = ~/.git-templates

[push]
	default = upstream

[hub]
	protocol = https

[branch]

[difftool]
	prompt = false

[diff]
	tool = vimdiff
	algorithm = patience

[credential]
	helper = osxkeychain

[web]
	browser = open

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f

[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"
[user]
	name = Stephen Way
	email = scway@thenavisway.com
[commit]
	template = /Users/Stephen/projects/team/jira-git-automation/GIT_TEMPLATE
[github]
	user = stephenway
[url "git@gitlab.buehner-fry.com:"]
	insteadOf = gl:
	pushInsteadOf = git://gitlab.buehner-fry.com/
[url "git://gitlab.buehner-fry.com/"]
	insteadOf = gitlab:
